        <ol class="nested">
            <li>
                What are the two parts of a class?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q1" value="a">
                variants and constants
                </li>
                <li>
                <input type="radio" name="q1" value="b">
                interface and implementation
                </li>
                <li>
                <input type="radio" name="q1" value="c">
                local and global
                </li>
                <li>
                <input type="radio" name="q1" value="d">
                interference and instantiation
                </li>
            </ol>
            <li>
                Which of the following is a class invariant for <code>Date</code>?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q2" value="a">
                we must always have a month less than 13
                </li>
                <li>
                <input type="radio" name="q2" value="b">
                month should be defined as an <code>int</code>
                </li>
                <li>
                <input type="radio" name="q2" value="c">
                printed dates should never take up more than one column in a spreadsheet
                </li>
                <li>
                <input type="radio" name="q2" value="d">
                the year cannot be a leap year
                </li>
            </ol>
            <li>
                When should the body of a function (its definition) be put in the class definition?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q3" value="a">
                when the function returns a built-in type
                </li>
                <li>
                <input type="radio" name="q3" value="b">
                when the function is only a line or two
                </li>
                <li>
                <input type="radio" name="q3" value="c">
                when the function is a very important part of the class
                </li>
                <li>
                <input type="radio" name="q3" value="d">
                when the function returns a user-defined type
                </li>
            </ol>
            <li>
                What would be a reasonable way to overload the plus (+) operator?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q4" value="a">
                to perform a hash function on some input string
                </li>
                <li>
                <input type="radio" name="q4" value="b">
                to access a website and add all of its pages to your site
                </li>
                <li>
                <input type="radio" name="q4" value="c">
                to add two complex numbers
                </li>
            </ol>
            <li>
                What does adding <code>const</code> to a member function do?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q5" value="a">
                promises that the function will not change the object
                </li>
                <li>
                <input type="radio" name="q5" value="b">
                says the function is a constructor
                </li>
                <li>
                <input type="radio" name="q5" value="c">
                asserts that the function will constantly return the same value for the same input
                </li>
            </ol>
            <li>
                A class can hold the following
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q6" value="a">
                data
                </li>
                <li>
                <input type="radio" name="q6" value="b">
                functions
                </li>
                <li>
                <input type="radio" name="q6" value="c">
                both data & functions
                </li>
                <li>
                <input type="radio" name="q6" value="d">
                none of the mentioned
                </li>
            </ol>
            <li>
                What defines the member of the class externally?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q7" value="a">
                
                </li>
                <li>
                <input type="radio" name="q7" value="b">
                
                </li>
                <li>
                <input type="radio" name="q7" value="c">
                ::
                </li>
                <li>
                <input type="radio" name="q7" value="d">
                none of the mentioned
                </li>
                <li>
                <input type="radio" name="q7" value="e">
                :
                </li>
            </ol>
            <li>
                Which of the following is an access specifier?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q8" value="a">
                All specified
                </li>
                <li>
                <input type="radio" name="q8" value="b">
                protected
                </li>
                <li>
                <input type="radio" name="q8" value="c">
                private
                </li>
                <li>
                <input type="radio" name="q8" value="d">
                public
                </li>
            </ol>
            <li>
                Which of the following access specifiers can be used for an interface?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q9" value="a">
                public
                </li>
                <li>
                <input type="radio" name="q9" value="b">
                All specified
                </li>
                <li>
                <input type="radio" name="q9" value="c">
                private
                </li>
                <li>
                <input type="radio" name="q9" value="d">
                protected
                </li>
            </ol>
            <li>
                Constructors are used to
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q10" value="a">
                initialize the objects
                </li>
                <li>
                <input type="radio" name="q10" value="b">
                construct the data members
                </li>
                <li>
                <input type="radio" name="q10" value="c">
                both initialize the objects & construct the data members
                </li>
                <li>
                <input type="radio" name="q10" value="d">
                none of the mentioned
                </li>
            </ol>
            <li>
                Which of the following is the correct way of implementing an interface A by Class B?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q11" value="a">
                class B extends A{}
                </li>
                <li>
                <input type="radio" name="q11" value="b">
                class B imports A{}
                </li>
                <li>
                <input type="radio" name="q11" value="c">
                all specified
                </li>
                <li>
                <input type="radio" name="q11" value="d">
                class B implements A{}
                </li>
            </ol>
            <li>
                Member function of a class can ..
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q12" value="a">
                Access subclass members
                </li>
                <li>
                <input type="radio" name="q12" value="b">
                Access all the members of the class
                </li>
                <li>
                <input type="radio" name="q12" value="c">
                Access only the private members of the class
                </li>
                <li>
                <input type="radio" name="q12" value="d">
                Access only Public members of the class
                </li>
            </ol>
            <li>
                Which of the following is not necessary for constructors?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q13" value="a">
                It must contain a definition body
                </li>
                <li>
                <input type="radio" name="q13" value="b">
                Its name must be same as that of class
                </li>
                <li>
                <input type="radio" name="q13" value="c">
                It must not have any return type
                </li>
                <li>
                <input type="radio" name="q13" value="d">
                It can contains arguments
                </li>
            </ol>
            <li>
                Which of the following operators cannot be overloaded?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q14" value="a">
                All mentioned
                </li>
                <li>
                <input type="radio" name="q14" value="b">
                . (Dot operator)
                </li>
                <li>
                <input type="radio" name="q14" value="c">
                ?: (Ternary Operator)
                </li>
                <li>
                <input type="radio" name="q14" value="d">
                :: (Scope resolution operator)
                </li>
            </ol>
            <li>
                Special data types defined by users is called
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q15" value="a">
                Conditional type
                </li>
                <li>
                <input type="radio" name="q15" value="b">
                Compound type
                </li>
                <li>
                <input type="radio" name="q15" value="c">
                none specified
                </li>
                <li>
                <input type="radio" name="q15" value="d">
                Enumeration type
                </li>
            </ol>
            <li>
                In C++, const qualifier can be applied to : 1. Member functions of a class; 2. Function arguments; 3. to a class data member which is declared as static; 4. Reference variables
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q16" value="a">
                all
                </li>
                <li>
                <input type="radio" name="q16" value="b">
                only 1, 3 and 4
                </li>
                <li>
                <input type="radio" name="q16" value="c">
                only 1, 2 and 3
                </li>
                <li>
                <input type="radio" name="q16" value="d">
                only 1,2 and 4
                </li>
            </ol>
        </ol>
        <details>
            <summary class="sum3">
                Answers
            </summary>
            <p>
                1. b; 2. a; 3. b; 4. c; 5. a; 6. c; 7. c; 8. a; 9. a; 10. a; 11. d; 12. b; 13. a; 14. a; 15. d; 16. a; 
            </p>
        </details>
