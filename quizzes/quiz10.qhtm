        <ol class="nested">
            <li>
                An <code>istream</code> fundamentally...
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q1" value="a">
                hides all user input from the programmer
                </li>
                <li>
                <input type="radio" name="q1" value="b">
                hides the details of input devices from the programmer
                </li>
                <li>
                <input type="radio" name="q1" value="c">
                hides what data types are being input from the programmer
                </li>
            </ol>
            <li>
                A file is fundamentally...
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q2" value="a">
                an icon inside a folder
                </li>
                <li>
                <input type="radio" name="q2" value="b">
                a list of records
                </li>
                <li>
                <input type="radio" name="q2" value="c">
                a sequence of bytes stored on some media
                </li>
            </ol>
            <li>
                Why is input usually harder than output?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q3" value="a">
                <code>istream</code> is a trickier class than <code>ostream</code>
                </li>
                <li>
                <input type="radio" name="q3" value="b">
                input devices require more assembly language code than output devices
                </li>
                <li>
                <input type="radio" name="q3" value="c">
                The user might input almost anything!
                </li>
            </ol>
            <li>
                What are the four steps for reading a file?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q4" value="a">
                delete the file, read from stdin, write the results there, and close stdin
                </li>
                <li>
                <input type="radio" name="q4" value="b">
                know its name, open it, read in the contents, and close it
                </li>
                <li>
                <input type="radio" name="q4" value="c">
                generate the file, write out its contents, close it, and verify a good result
                </li>
            </ol>
            <li>
                The ______ objects have values that can be tested for various conditions.
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q5" value="a">
                ofstream
                </li>
                <li>
                <input type="radio" name="q5" value="b">
                ifstream
                </li>
                <li>
                <input type="radio" name="q5" value="c">
                stream
                </li>
                <li>
                <input type="radio" name="q5" value="d">
                osstream
                </li>
            </ol>
            <li>
                Where does a cin stops that extraction of data?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q6" value="a">
                by seeing >>
                </li>
                <li>
                <input type="radio" name="q6" value="b">
                none of the above
                </li>
                <li>
                <input type="radio" name="q6" value="c">
                both a and b
                </li>
                <li>
                <input type="radio" name="q6" value="d">
                by seeing a blankspace
                </li>
            </ol>
            <li>
                Which of the following is not a stream state (istream)?
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q7" value="a">
                bad()
                </li>
                <li>
                <input type="radio" name="q7" value="b">
                eof()
                </li>
                <li>
                <input type="radio" name="q7" value="c">
                success()
                </li>
                <li>
                <input type="radio" name="q7" value="d">
                good()
                </li>
                <li>
                <input type="radio" name="q7" value="e">
                fail()
                </li>
            </ol>
            <li>
                Unformatted input functions are handled by
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q8" value="a">
                instream
                </li>
                <li>
                <input type="radio" name="q8" value="b">
                bufstream
                </li>
                <li>
                <input type="radio" name="q8" value="c">
                ostream
                </li>
                <li>
                <input type="radio" name="q8" value="d">
                istream
                </li>
            </ol>
            <li>
                A class that defines cout, cerr and clog objects and stream insertion operator is
            </li>
            <ol type="a" class="nested">
                <li>
                <input type="radio" name="q9" value="a">
                istream
                </li>
                <li>
                <input type="radio" name="q9" value="b">
                fstream
                </li>
                <li>
                <input type="radio" name="q9" value="c">
                ostream
                </li>
                <li>
                <input type="radio" name="q9" value="d">
                kstream
                </li>
            </ol>
        </ol>
        <details>
            <summary class="sum3">
                Answers
            </summary>
            <p>
                1. b; 2. c; 3. c; 4. b; 5. b; 6. d; 7. c; 8. d; 9. c; 
            </p>
        </details>
