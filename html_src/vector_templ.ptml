<!DOCTYPE html>
<html>
    <head>
<!--include head.txt -->
        <title>
            19. Vector, Templates, and Exceptions
        </title>
<!--include googleAnalyticsScript.txt -->
    </head>

    <body>
        <div class="wrapper">
<!--include navbar.txt -->
            <div id="content">
                <h1>
                    19. Vector, Templates, and Exceptions
                </h1>

                <p class="leadquote">
                    "Success is never final." -- Winston Churchill
                </p>

                <details>
                    <summary class="sum1">
                    19.1 The problems
                    </summary>
                    <figure>
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/ProgressiveDieToyota-strip-scrap.jpg/700px-ProgressiveDieToyota-strip-scrap.jpg"
                            width="30%">
                        <figcaption>
                        </figcaption>
                    </figure>

                    <p>
                        We want to be able to:
                    </p>

                    <ul>
                        <li>
                            Change the size of vectors on the fly.
                        </li>

                        <li>
                            Make vectors that can store any type we wish.
                        </li>

                        <li>
                            Catch out-of-range errors.
                        </li>
                    </ul>

                    <p>
                        We want these features to so can worry about
                        our users' needs and not about low-level language
                        details.
                    </p>

                    <p>
                        Why don't we want fixed-size vectors? We often <i>don't
                        know</i> how much data is coming!
                    </p>

                    <p>
                        Why don't we use <code>vector</code> for all of
                        our collection needs? Wel, consider searching a
                        million-record <code>vector</code> for a customer
                        record, versus searching a binary search tree.
                        Or think of lookups in a hash table.
                        Different data structures fit different uses!
                        Example: the day's sales records at our shop.
                    </p>

                </details>

                <details>
                    <summary class="sum1">
                    19.2 Changing size
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <details>
                        <summary class="sum2">
                        19.2.1 Representation
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>

                        <p>
                            We <i>could</i> just allocate a new array
                            every single time someone calls
                            <code>push_back()</code>: but that is not very
                            efficient! Better to allocate <i>some</i> extra memory
                            for every chunk we use, like this:
                        </p>

                        <p>
                        <code>
                            <pre>
class vector {
    int sz;
    double* elem;
    int space;  <span class="comment">// number of elems + free space</span>
public:
    <span class="comment">// ...</span>
};
                            </pre>
                        </code>
                        </p>

                    </details>

                    <details>
                        <summary class="sum2">
                        19.2.2 reserve and capacity
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.2.3 resize
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.2.4 push_back
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>

                        <p>
                            What do we do when we run out of space?
                            Interestingly, most implementations
                            of <code>vector</code> ask for double
                            the amount of space the vector is already
                            using. (The Lindy effect!)
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.2.5 Assignment
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.2.6 Our vector so far
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                </details>

                <details>
                    <summary class="sum1">
                    19.3 Templates
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    </p>
                    <details>
                        <summary class="sum2">
                        19.3.1 Types as template parameters
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.3.2 Generic programming
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.3.3 Concepts
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.3.4 Containers and inheritance
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.3.5 Integers as template parameters
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.3.6 Template argument deduction
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.3.7 Generalizing vector
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                </details>

                <details>
                    <summary class="sum1">
                    19.4 Range checking and exceptions
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    </p>
                    <details>
                        <summary class="sum2">
                        19.4.1 An aside: design considerations
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.4.2 A confession: macros
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                </details>

                <details>
                    <summary class="sum1">
                    19.5 Resources and exceptions
                    </summary>
                    <figure>
                        <img src="" width="40%">
                        <figcaption>
                        </figcaption>
                    </figure>
                    <p>
                    </p>
                    <details>
                        <summary class="sum2">
                        19.5.1 Potential resource management problems
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.5.2 Resource acquisition is initialization
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.5.3 Guarantees
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.5.4 unique_ptr
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.5.5 Return by moving
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>

                    <details>
                        <summary class="sum2">
                        19.5.6 RAII for vector
                        </summary>
                        <figure>
                            <img src="" width="40%">
                            <figcaption>
                            </figcaption>
                        </figure>
                        <p>
                        </p>
                    </details>
                </details>

                <details>
                    <summary class="sum1">
                    Test Yourself!
                    </summary>
                    <figure>
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Exams_in_Jaura%2C_India.jpg/560px-Exams_in_Jaura%2C_India.jpg"
                        width="20%">
                        <figcaption>
                        </figcaption>
                    </figure>
<!--include quiz19.qhtm -->
                </details>

                <details>
                    <summary class="sum1">
                    Drill
                    </summary>
                    <figure>
                        <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/7b/Queens.guard.buck.palace.arp.jpg/600px-Queens.guard.buck.palace.arp.jpg"
                        width="20%">
                        <figcaption>
                        </figcaption>
                    </figure>

                    <ol>
                    </ol>
                </details>
            </div>
        </div>

    </body>
</html>
